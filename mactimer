#!/bin/bash

#disable job control
trap "" SIGTSTP

TIME=${1:-60}
GREETING=${2:-Hello}
GAME=${3:-Something fun}

VOICE=${VOICE:-Zarvox}

SAY="say --voice $VOICE"
DELAY_AFTER_WARNING=${DELAY_AFTER_WARNING:-60}

logged_in_user() {
  stat -f %Su /dev/console
}

lockit() {
  trap 'echo ignored' TERM QUIT INT
  $SAY bye
  while true; do
    lock_start=$(date +%s)
    if [ $(logged_in_user) = $USER ]; then
      echo $(date) Locking screen
      $SAY Locking screen
      nohup /System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend >> /tmp/timer.out </dev/null 2>&1 &
    fi

    # give the screen 10 seconds to lock before killing processes
    while [ $(date +%s) -lt $((lock_start+10)) ]; do
      if [ $(logged_in_user) = root ]; then
        echo $(date) Screen locked. Timer exiting.
        exit
      fi
      sleep 0.1
    done

    echo $(date) Screen not locked. Killing programs running as $USER
    $SAY Killing programs
    kill -9 $(pgrep -u $USER | grep -vw $$)
  done
}

# make the screen lock if this timer program exits (prevents ^C, etc)
trap 'lockit' TERM QUIT EXIT

echo "$(date) Stopping in $TIME minutes"
$SAY ${GREETING}, it is time to play $GAME

if [ $TIME -gt 5 ]; then
  sleep $(( (TIME-5) * 60))
  $SAY "5 minutes left"
  sleep 300
else
  sleep $((TIME*60))
fi

$SAY Sigh, it is time to stop
sleep $DELAY_AFTER_WARNING

